# URL of the map properties file
mapProperties = file:data/openmap.properties

# path to the log and scenario directory
eventArchive = data/events

# path to the target configuration file
targetFile = data/targets.csv

# path to the target icon
targetIcon = data/icons/target.png

# show the taget name
showTargetName = true

# radius of the blind zone surrounding a target in which the lead time of the
# approaching S-wave is negative
blindZoneRadius = 40

# show all configured stations
showStations = true

# show station name
showStationName = false

# path to the station configuration file
stationFile = data/stations.csv

# highlight stations contributing to the alert
showUsedStations = true

# color the station according to the amplitude of the preferred shaking parameter
# NOT YET IMPLEMENTED
showStationShaking = false

# display an alert level icon next to the station
# NOT YET IMPLEMENTED
showStationAlert = false

# path to the event icon
eventIcon = data/icons/event.png

# velocity of the primary wave in km/s
vp = 5.5

# velocity of the secondary wave in km/s
vs = 3.3

# number of seconds after the event progress is stopped
timeoutAfterOriginTime = 60.0

# bring application to front in case a new event arrives
# NOT YET IMPLEMENTED
toFront = true

# alert sound to play on new event arrival
alertSound = data/sound/event.wav

# number of times to repeat alert sound, default = 0
alertSoundLoop = 5

# countdown sound to play prior to S-Wave arrival
countdownSound = data/sound/countdown.wav

# number of seconds prior to S-wave arrival to start playing countdownSound
countdownSeconds = 10.0

# regional shaking scenario configuration file
shakeMap.file = data/RegionalAmpliProxy.csv

# allowed values: PGA, PGV, PSA, DRS, Intensity
shakeMap.parameter = Intensity

# minimum value to pin to the first color of the gradient
shakeMap.minValue = 2

# maximum value to pin to the last color of the gradient
shakeMap.maxValue = 9

# use a logarithmic scale for distributing the shake map colors between minValue
# and maxValue
shakeMap.logScale = false

# path to the logo icon
logoIcon = data/icons/reakt.png

# ground motion implementations and parameters
gmpe.pga.class = org.reakteu.eewd.gmpe.impl.Swiss
gmpe.pgv.class = org.reakteu.eewd.gmpe.impl.Swiss
gmpe.psa.class = org.reakteu.eewd.gmpe.impl.Swiss
#gmpe.psa.class = org.reakteu.eewd.gmpe.impl.LookupTable
gmpe.drs.class = org.reakteu.eewd.gmpe.impl.Swiss
#ipe.intensity.class = org.reakteu.eewd.ipe.impl.FC06

# directory containing gmpe lookup tables, search names
#   pgv.inp, pgv84.inp, pgv16.inp
#   pga.inp, pga84.inp, pga16.inp
#   psa[1..n].inp, psa[1..n]_84.inp, psa[1..n]_16.inp
#   drs[1..n].inp, drs[1..n]_84.inp, drs[1..n]_16.inp
lookupTable.dataDir = data/gmpe

# derive intensity from ground motion parameter
#gmice.pga.class = 
gmice.pgv.class = org.reakteu.eewd.gmice.impl.Swiss

# used for PSA and DRS calculation
controlPeriod = .5

# vector of spectral periods to compute PSA/DRS values visible in spectrum plot
# NOTE: Make sure that the configured PSA/DRS implementation supports the configured periods
spectrum.periods = 0.01, 0.02, 0.03, 0.05, 0.1, 0.2, 0.4, 1, 2

# use a logarithmic scale for the periods on the X-axis
spectrum.logScale = true

# reference values shown as green and red graph in spectrum plot
spectrum.reference1 = 0.13, 0.16, 0.19, 0.25, 0.25, 0.25, 0.16, 0.061881188, 0.018021915
spectrum.reference2 = 0.052, 0.064, 0.076, 0.1, 0.1, 0.1, 0.065, 0.024752475, 0.007208766

# allowed values: PSA, DRS
spectrum.parameter = PSA

# display periods as frequencies
useFrequencies = true

# calculate distances from hypocenter or epicenter
# NOT YET IMPLEMENTED
rIsHypocentral = true

ampliProxyName = "deltaI"

radiusOfInfluence = 5
stationDisplacementThreshold = 0.002
stationTauCThreshold = 0.

# minimum magnitude threshold
#filter.minimumMagnitude = 3.0

# minimum likelihood threshold, if sets events without likelihood information
# are ignored
#filter.minimumLikelihood = 0.5

# messaging connection parameters - please contact your EEW provider 
#connection.host = 
#connection.port = 
#connection.topic = 
#connection.username = 
#connection.password = 

# interval in seconds a keep alive message is expected, if no message is
# received a reconnect attempt is made, use 0 to deactivate this feature
connection.keepaliveInterval = 10.0

# maximum tolerated latency in seconds
connection.maxLatency = 2.0
