# URL of the map properties file
mapProperties = file:data/openmap.properties

# path to the log and scenario directory
eventArchive = data/events

# path to the target configuration file
targetFile = data/targets.csv

# path to the target icon
targetIcon = data/icons/target.png

# show the taget name
showTargetName = true

# radius of the blind zone surrounding a target in which the lead time of the
# approaching S-wave is negative due to the processing time
blindZoneRadius = 40

# show all configured stations
showStations = true

# show station name
showStationName = false

# path to the station configuration file
stationFile = data/stations.csv

# highlight stations participating in an ongoing event
showUsedStations = false

# color the station according to the amplitude of the preferred shaking parameter
showStationShaking = false

# display an alert level icon next to the station
showStationAlert = false

# path to the event icon
eventIcon = data/icons/event.png

# velocity of the primary wave in km/s
vp = 5.5

# velocity of the secondary wave in km/s
vs = 3.3

# number of seconds after the event progress is stopped
timeoutAfterOriginTime = 60.0

# alert sound to play on new event arrival
alertSound = data/sound/event.wav

# number of times to repeat alert sound, default = 0
alertSoundLoop = 1

# shake map configuration file
shakeMap.file = data/RegionalAmpliProxy.csv

# allowed values: PGA, PGV, PSA, DRS, Intensity
shakeMap.parameter = PGA

# minimum value to pin to the first color of the gradient
shakeMap.minValue = 0.0

# maximum value to pin to the last color of the gradient
shakeMap.maxValue = 2

# ground motion implementations and parameters
gmpe.pga.class = org.reaktEU.ewViewer.gmpe.impl.Swiss
gmpe.pgv.class = org.reaktEU.ewViewer.gmpe.impl.Swiss
gmpe.psa.class = org.reaktEU.ewViewer.gmpe.impl.Swiss
gmpe.drs.class = org.reaktEU.ewViewer.gmpe.impl.Swiss
gmpe.intensity.class = org.reaktEU.ewViewer.gmpe.impl.FC06
#gmpe.other.class =
#gmpe.other.name =

# derive intensity from ground motion parameter
#gmice.pga.class = 
gmice.pgv.class = org.reaktEU.ewViewer.gmice.impl.Swiss

# used for PSA and DRS calculation
controlPeriod = 0.3

# vector of spectral periods to compute PSA/DRS values visible in spectrum plot
spectrum.periods = 0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.2, 0.3, 0.5, 0.7, 1, 2, 3, 5, 7, 10

# use a logarithmic scale for the periods on the X-axis
spectrum.logScale = true

# reference values shown as green and red graph in spectrum plot
spectrum.reference1 = 0.01, 0.025, 0.075, 0.1, 0.075, 0.05, 0.04, 0.03, 0.02, 0.01, 0.009, 0.008, 0.007, 0.006, 0.005, 0.004
spectrum.reference2 = 0.1, 0.25, 0.75, 1, 0.75, 0.5, 0.4, 0.3, 0.2, 0.1, 0.09, 0.08, 0.07, 0.06, 0.05, 0.04

# allowed values: PSA, DRS
spectrum.parameter = PSA



# display periods as frequencies
useFrequencies = true


# removed, rIsEpicentral = !rIsHypocentral
#rIsEpicentral = false
rIsHypocentral = false

# removed, useAmpliProxy = ampliProxyName != null
#useAmpliProxy = true

ampliProxyName = "VS30"

radiusOfInfluence = 5
stationDisplacementThreshold = 0.002
stationTauCThreshold = 0.6

# messaging connection parameters
connection.host = sc3vsa.ethz.ch
connection.port = 61618
connection.topic = /topic/eewd
connection.username = gempa
connection.password = GempaIsOK

# interval in seconds a keep alive message is expected, if no message is
# received a warning is displayed
connection.keepaliveInterval = 10.0

# maximum tolerated latency in seconds
connection.maxLatency = 1.0
